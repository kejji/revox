name: Deploy backend to Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (backend)
        run: npm install
        working-directory: backend

      - name: Bundle backend with esbuild
        run: |
          npm install --save-dev esbuild
          npx esbuild index.js \
            --bundle \
            --platform=node \
            --target=node18 \
            --outfile=../index.js
        working-directory: backend

      - name: Bundle worker with esbuild
        run: |
          npx esbuild worker.js \
            --bundle \
            --platform=node \
            --target=node18 \
            --outfile=../worker.js
        working-directory: backend

      - name: Bundle userSync with esbuild
        run: |
          npx esbuild userSync.js \
            --bundle \
            --platform=node \
            --target=node18 \
            --outfile=../userSync.js
        working-directory: backend

      - name: Bundle ingestScheduler with esbuild
        run: |
          npx esbuild ingestScheduler.js \
            --bundle \
            --platform=node \
            --target=node18 \
            --outfile=../ingestScheduler.js
        working-directory: backend

      - name: Package bundle into zip
        run: |
          zip revox-backend.zip index.js worker.js userSync.js ingestScheduler.js

      - name: Debug zip content
        run: unzip -l revox-backend.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name revox-backend \
            --zip-file fileb://revox-backend.zip \
            --region eu-west-3

          aws lambda update-function-code \
            --function-name revox-worker \
            --zip-file fileb://revox-backend.zip \
            --region eu-west-3

          aws lambda update-function-code \
            --function-name revox-user-sync \
            --zip-file fileb://revox-backend.zip \
            --region eu-west-3
          
          aws lambda update-function-code \
            --function-name revox-ingest-scheduler \
            --zip-file fileb://revox-backend.zip \
            --region eu-west-3

      - name: Build frontend
        if: steps.changes.outputs.frontend == 'true'
        run: |
          npm install --legacy-peer-deps
          npm run build
        working-directory: frontend
        env:
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.VITE_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_APP_CLIENT_ID: ${{ secrets.VITE_COGNITO_APP_CLIENT_ID }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Deploy frontend to S3
        if: steps.changes.outputs.frontend == 'true'
        run: |
          aws s3 sync ./dist s3://revox-frontend --region eu-west-3 --delete
        working-directory: frontend